@preprocess
#foreach( $shape in $shapes )
	#set( $type = $shape.Type.split("\.")[4].toLowerCase() )
	#if($type == "event" || $type == "function")
		#set( $id = $shape.Id )
		#set( $outs = {} )
		'$id'={label:'$shape.Name' type:'$type'
		## Check if there are outs~nl
		#foreach( $edge in $edges )
 			#set($srcNode = $edge.Source)
 			#set($tgtNode = $edge.Target)
 			#set($srcNodeType = $srcNode.Type.split("\.")[4].toLowerCase())
 			#set($tgtNodeType = $tgtNode.Type.split("\.")[4].toLowerCase())
 			#set($noConnectorTarget = $tgtNodeType != "xor" && $tgtNodeType != "and" && $tgtNodeType != "or")
			#if($srcNode == $shape)
				#if($noConnectorTarget == true)
					#set( $outs[$outs.size()]=$edge.Target.Id )
					#break
				#else
					#set( $edgeColl = {} )
					#foreach( $e in $edges)
						#if($e.Source == $tgtNode)
							#set( $r = $edgeColl.add($e.Target))#set( $outs[$outs.size()] = $e.Target.Id)
						#end
					#end
				#end
			#end
		#end
	#if( !$outs.isEmpty() ) out:[#foreach($out in $outs)'$out'#if( $foreach.hasNext ), #end#end]#end}~nl
	#end
#end